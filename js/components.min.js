let ComponentConfig={paths:{header:"components/header.html",footer:"components/footer.html",metaTags:"components/meta-tags.html"},placeholders:{header:"header-placeholder",footer:"footer-placeholder",metaTags:"meta-tags-placeholder"},fallbacks:{header:'<header class="error-header"><div class="container"><a href="/" class="logo">AI Reality Check</a></div></header>',footer:'<footer class="error-footer"><div class="container"><p>&copy; 2025 AI Reality Check</p></div></footer>',metaTags:`
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>AI Reality Check</title>
            <meta name="description" content="AI Reality Check - Practical AI solutions for business">
            <link rel="preconnect" href="https://fonts.googleapis.com">
            <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
            <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
            <link rel="stylesheet" href="css/style.min.css">
            <link rel="stylesheet" href="../css/style.min.css">
            <link rel="stylesheet" href="../../css/style.min.css">
            <script>
                // Emergency stylesheet loading
                (function() {
                    function loadEmergencyStyles() {
                        const isStyleLoaded = Array.from(document.styleSheets).some(sheet => {
                            try {
                                return sheet.href && (sheet.href.includes('/style.min.css') || sheet.href.includes('/style.css'));
                            } catch(e) {
                                return false;
                            }
                        });
                        
                        if (!isStyleLoaded) {
                            console.warn('Main stylesheet not detected, attempting to load emergency styles');
                            // Try different relative paths to find the stylesheet
                            const paths = ['./css/style.min.css', '../css/style.min.css', '../../css/style.min.css', '/css/style.min.css'];
                            
                            // Create emergency style element
                            const emergencyStyle = document.createElement('link');
                            emergencyStyle.rel = 'stylesheet';
                            emergencyStyle.id = 'emergency-styles';
                            
                            // Try first path
                            emergencyStyle.href = paths[0];
                            document.head.appendChild(emergencyStyle);
                            
                            // Check if it worked after a short delay
                            setTimeout(function() {
                                const computed = getComputedStyle(document.body);
                                const fontFamily = computed.fontFamily;
                                
                                // If we don't have Roboto, try the next path
                                if (!fontFamily.includes('Roboto')) {
                                    console.warn('First stylesheet path failed, trying alternatives');
                                    // Try each path
                                    let pathIndex = 1;
                                    const tryNextPath = function() {
                                        if (pathIndex < paths.length) {
                                            emergencyStyle.href = paths[pathIndex];
                                            pathIndex++;
                                            setTimeout(tryNextPath, 100);
                                        } else {
                                            console.error('All stylesheet paths failed');
                                        }
                                    };
                                    tryNextPath();
                                }
                            }, 100);
                        }
                    }
                    
                    // Check styles on load
                    window.addEventListener('load', loadEmergencyStyles);
                    
                    // Also check after a short delay in case load event already fired
                    setTimeout(loadEmergencyStyles, 1000);
                })();
            </script>
        `},defaultThemeClass:"theme-auto"};function ensureThemeClass(){var e=document.documentElement,t=localStorage.getItem("theme")||"auto";e.classList.remove("theme-auto","theme-light","theme-dark"),e.classList.add("theme-"+t)}function ensureStylesLoaded(){if(!Array.from(document.styleSheets).some(e=>{try{return e.href&&(e.href.includes("/style.min.css")||e.href.includes("/style.css"))}catch(e){return!1}})){console.warn("No stylesheet detected, adding emergency style links"),document.querySelector('link[href*="fonts.googleapis.com/css"]')||((e=document.createElement("link")).rel="stylesheet",e.href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap",document.head.appendChild(e));var e=document.createElement("link"),n=(e.rel="stylesheet",window.location.pathname.split("/").filter(e=>0<e.length));let o;if(0===n.length)o="./css/style.min.css";else if(1===n.length&&n[0].endsWith(".html"))o="./css/style.min.css";else{let t=n.length;n[n.length-1].endsWith(".html")&&t--,o="";for(let e=0;e<t;e++)o+="../";o+="css/style.min.css"}e.href=o,document.head.appendChild(e)}}function loadComponent(a,o,n){let r=document.getElementById(a);if(r){r.innerHTML='<div class="component-loading">Loading component...</div>';let l=getPathToRoot();var e=l+o;let t=setTimeout(()=>{handleComponentError(new Error("Timeout loading component: "+o),r,n,a,o)},5e3);fetch(e).then(e=>{if(clearTimeout(t),e.ok)return e.text();throw new Error(`Failed to load component: ${e.status} `+e.statusText)}).then(e=>{var t=window.location.pathname,o=window.PAGE_TITLE||document.title||"AI Reality Check",n=window.PAGE_DESCRIPTION||document.querySelector('meta[name="description"]')?.content||"AI Reality Check - Practical AI solutions for business",s=window.REL_PATH||l||"./",t=window.CANONICAL_PATH||t||"/";if(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/\{\{PAGE_TITLE\}\}/g,o)).replace(/\{\{PAGE_DESCRIPTION\}\}/g,n)).replace(/\{\{REL_PATH\}\}/g,s)).replace(/\{\{CANONICAL_PATH\}\}/g,t)).replace(/\[ROOT_URL\]/g,s)).replace(/\[CURRENT_PATH\]/g,t)).replace(/\[PAGE_TITLE\]/g,o)).replace(/\[PAGE_DESCRIPTION\]/g,n),r.innerHTML=e,window.componentLoadingStatus.loaded++,a===ComponentConfig.placeholders.header){if("function"==typeof initMobileNav)try{initMobileNav()}catch(e){console.warn("Error initializing mobile navigation:",e)}if("function"==typeof highlightCurrentPage)try{highlightCurrentPage()}catch(e){console.warn("Error highlighting current page:",e)}}}).catch(e=>{clearTimeout(t),handleComponentError(e,r,n,a,o)})}else logComponentError("Placeholder not found",a,o)}function handleComponentError(e,t,o,n,s){logComponentError(e.message,n,s),window.componentLoadingStatus.failed++,window.componentLoadingStatus.errors.push({component:n,path:s,error:e.message}),o&&t?t.innerHTML=o:t&&(t.innerHTML='<div class="component-error">Component could not be loaded</div>'),document.body.classList.add("component-load-error")}function logComponentError(e,t,o){console.error(`Component Error [${t}]: `+e,`
Component Path: `+o,`
Page URL: `+window.location.href)}function getPathToRoot(){let e=window.location.pathname;e.endsWith("/")||e.endsWith(".html")||(e+="/");var t=e.split("/").filter(e=>0<e.length);if(0===t.length)return"";if(1===t.length&&t[0].endsWith(".html"))return"";let o=t.length,n=(0<t.length&&t[t.length-1].endsWith(".html")&&o--,"");for(let e=0;e<o;e++)n+="../";return n}document.addEventListener("DOMContentLoaded",function(){ensureThemeClass();let e=0;var t=document.getElementById(ComponentConfig.placeholders.header),o=document.getElementById(ComponentConfig.placeholders.footer),n=document.getElementById(ComponentConfig.placeholders.metaTags);t&&e++,o&&e++,n&&e++,window.componentLoadingStatus={total:e,loaded:0,failed:0,errors:[]},n?loadComponent(ComponentConfig.placeholders.metaTags,ComponentConfig.paths.metaTags,ComponentConfig.fallbacks.metaTags):ensureStylesLoaded(),t&&setTimeout(()=>{loadComponent(ComponentConfig.placeholders.header,ComponentConfig.paths.header,ComponentConfig.fallbacks.header)},10),o&&setTimeout(()=>{loadComponent(ComponentConfig.placeholders.footer,ComponentConfig.paths.footer,ComponentConfig.fallbacks.footer)},20)});
